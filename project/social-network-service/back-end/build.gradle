plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // LocalDataTime
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // webSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
    //embedded-redis
//    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // spring web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    testImplementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // aws
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
    implementation 'ca.pjer:logback-awslogs-appender:1.6.0'
    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // jasypy
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    // logback
    implementation 'ch.qos.logback:logback-classic'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}