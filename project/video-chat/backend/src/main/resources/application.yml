server:
  port: 4040

spring:
  application:
    name: whoareyou

  datasource:
    url: jdbc:mysql://mysql:3306/whoareyou?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    #    url: jdbc:mysql://localhost:3306/whoareyou?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root


  #   update 방식 시작
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  #     update 방식 끝

  # create 방식 시작
  #  jpa:
  #    show-sql: true
  #    hibernate:
  #      ddl-auto: create
  #    properties:
  #      hibernate:
  #        format_sql: true
  #        dialect: org.hibernate.dialect.MySQL8Dialect
  #    defer-datasource-initialization: true
  #
  #  sql:
  #    init:
  #      mode: always
  # create 방식 끝

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: mwJkCwJrXmz_coCMECD_
            client-secret: UQjKMXiTt6
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            scope: email, name, nickname, gender
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  data:
    mongodb:
      uri: mongodb://root:1234@mongodb:27017/whoareyou?authSource=admin

  kafka:
    consumer:
      bootstrap-servers: kafka:9092
      group-id: chat-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

secret-key: ThisStatementIsJwtSecretKeyDoNotUseThisStatement

livekit:
  api:
    key: APIXAD86V8PHHZ2
    secret: Bi1l6R02usl4OirnJ1LMfPHaZuaGeaT8aAp41WzLXyf
  server:
    url: wss://myapp-yqvsqxqi.livekit.cloud


logging:
  level:
    org.hibernate.orm.jdbc.bind: trace

#환경분리 테스트
#---
#spring:
#  config:
#    activate:
#      on-profile: deploy
#
#  datasource:
#    url: jdbc:mysql://mysql:3306/whoareyou?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.MySQL8Dialect
#
#---
#spring:
#  config:
#    activate:
#      on-profile: develop
#
#  datasource:
#    url: jdbc:mysql://localhost:3306/whoareyou?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: create
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.MySQL8Dialect
#    defer-datasource-initialization: true
#
#  sql:
#    init:
#      mode: always